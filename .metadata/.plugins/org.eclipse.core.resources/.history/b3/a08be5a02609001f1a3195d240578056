package pre.propertiesEx2;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;

public class PropTest {
	//메인메서드
	public static void main(String[] args) {
		Properties p = new Properties();
		//p.fileSave();   p 밑에서 추가로 가져오거 작성할 때 사용하는것
		// 메서드를 따로 만들어ㅜ젔기 때문에 위 방법으로 사용하지 않음
		
		fileSave(p);
	}
	//fileSave
	// 1   순풍산부인과  1998  682
	// 2   똑바로살아라  2002  239
	// 3   눈물의 여왕  2024  16
	// 4   아내의유혹   2008  129
	//drama.xml
	public static void fileSave(Properties p) {
		p.setProperty("1", "순풍산부인과,1998,682");
		p.setProperty("2", "똑바로살아라,2002,239");
		p.setProperty("3", "눈물의여왕,2024,16");
		p.setProperty("4", "아내의유혹,2008,129");
		//xml 텍스트 기반의 문서 웹에서 읽기 편하도록<> 규칙을 지정해서 작성하는 공간
		//Properties xml 파일로 저장
		
		
		try {
			
			FileOutputStream fos = new FileOutputStream("drama.xml");
			p.storeToXML(fos, null);
			fos.close();
			System.out.println("데이터가 drama.xml 파일에 저장되었습니다.");
		} catch (Exception e) {
			
		
			e.printStackTrace();
			
		}
		
		
	}
	public static void fileOpen(Properties p) {
		try {
			
			FileInputStream fis =new FileInputStream("drama.xml");
			p.loadFromXML(fis);
			fis.close();
			
			//Properties 객체에 키-값을 넣어서 List저장
			
			List<Drama> 드라마들 = new ArrayList<>(); 
			//눈으로 데이터가 어떻게 들어잇는지 데이터를 담을 리스트를 만들어준 것
			//for 문으로 설정 파일안에 적혀있는 이름을 기준으로 모두 추가하기
			for(String key : p.stringPropertyNames())
		} catch (Exception e) {
			
			
			e.printStackTrace();
		
		}
		
	}

}
